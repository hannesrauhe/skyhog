<?php
/*
Copyright 2012-2015 Hannes Rauhe

This file is part of Skyhog.

Skyhog is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
    
Skyhog is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Skyhog.  If not, see <http://www.gnu.org/licenses/>.
*/
function check_dir($path,$descr,$warning='') {
	if(substr($path,-1)!="/") {
		echo $path." has no directory separator in the end! Please add one in the config file!";
		exit(1);
	}
	if(is_dir($path)) {
		echo $descr." exists ";
		if(@touch($path."/testtouch") && @unlink($path."/testtouch")) {
			echo "and is writable\n";
		} else {
			echo "but is not writable: ".$path."!\n";
			if(empty($warning))
				exit(1);
			else "WARNING: Scyhog does not necessarily need acccess rights to this directory, but the following will not work: ".$warning."\n";
		}
	} else {
		if(mkdir($path)) {
			echo $descr." created\n";
		} else {
			echo "couldn't create ".$descr." at ".$path."!\n";
			exit(1);
		}
	}
}


if((@include_once("./config.inc.php")) === FALSE) {
	include_once("./config.inc.php.template");
	$needed_const = get_defined_constants(true);
	$needed_const = $needed_const['user'];
	if(!array_key_exists('DOMAIN', $_POST)) {
?>

<textarea readonly="readonly" rows="10" cols="80">
Welcome to Skyhog!

Fill out form below and click submit to create the file config.inc.php. 
(Alternatively you can copy and edit config.inc.php.template)

Have fun!
</textarea>
<br />
<form action="setup.php" method="POST">
	<table>
	<?php foreach ($needed_const as $key => $value) {
		echo "<tr><td>$key</td><td><input type='text' name='$key' value='$value' size='30' /></td></tr>\n"; 
	}
	?>
	</table>
	<input type="submit" />
</form>
<?php
		exit(1);
	} else {
		//relevant data has been POSTED - replace in config-template
		$file_c = "<?php //Generated by the setup script\n";
		foreach ($needed_const as $key => $value) {
			$use_value = $value;
			if(array_key_exists($key, $_POST) ) {
				$use_value = trim($_POST[$key]);
				if(empty($use_value)) {
                                        continue;
					//$use_value = $value;
				}
				if((substr($key, -3)=="DIR" ||  substr($key, -4)=="PATH") && substr($use_value,-1)!="/") {
					$use_value.="/";
				}
			}
			$file_c .= "define(\"$key\",\"$use_value\");\n";
		}
	    if(file_put_contents("./config.inc.php", $file_c) === FALSE) {
	    	echo "The config file hasn't been written, make the skyhog directory writable for the webserver and reload or copy this content to config.inc.php:\n";
			echo $file_c;
			exit(1);
	    } else {
	    	echo "The config file has been written, please reload!\n";
			exit(1);
	    }
	}
} else {
	echo '<textarea readonly="readonly" rows="10" cols="80">';
	echo "The config file exists... ";

	if(! (defined("DOMAIN") &&	defined("WRK_DIR") && defined("LOG_DIR") && defined("BAK_DIR"))) {
		echo "but DOMAIN, BAK_DIR, LOG_DIR, WRK_DIR rule is missing. Repair manually please!\n";
		exit(1);
	}
    if(! (defined("DEFAULT_LIVE_DIR") &&  defined("DEFAULT_PREVIEW_DIR"))) {
        echo "but DEFAULT_LIVE_DIR or DEFAULT_PREVIEW_DIR is missing. Repair manually please!\n";
        exit(1);
    }
	if(! (defined("GIT_CMD") || defined("PYTHON_CMD"))) {
		echo "but GIT_CMD or PYTHON_CMD is missing. Repair manually please!\n";
		exit(1);
	}
	if(! (defined("DB_NAME")) ) {
		echo "but DB_NAME is missing. Trying to add the default value automatically...";
		$cont_app = 'define("DB_NAME",WRK_DIR."scihog.db");';
	    if(file_put_contents("./config.inc.php", $cont_app,FILE_APPEND) === FALSE) {
	    	echo "The config file hasn't been written, make the skyhog directory writable for the webserver and reload or add this content to config.inc.php:\n";
			echo $cont_app;
			exit(1);
	    } else {
	    	echo "succeded. Please reload page for further tests!\n";
	    	exit(0);
	    }		
	}
	/*
	if(! (defined("PHPSQLITEADMIN_PASSWD")) ) {
		echo "but PHPSQLITEADMIN_PASSWD is missing. Trying to add the default value automatically...";
		$cont_app = 'define("PHPSQLITEADMIN_PASSWD","scihogdb");';
	    if(file_put_contents("./config.inc.php", $cont_app,FILE_APPEND) === FALSE) {
	    	echo "The config file hasn't been written, make the skyhog directory writable for the webserver and reload or add this content to config.inc.php:\n";
			echo $cont_app;
			exit(1);
	    } else {
	    	echo "succeded. Please reload page for further tests!\n";
	    	exit(0);
	    }		
	}
	*/ 
	if(! (defined("LOG_DIR")) ) {
		echo "but LOG_DIR is missing. Trying to add the default value automatically...";
		$cont_app = "\n".'define("LOG_DIR","../log/");';
	    if(file_put_contents("./config.inc.php", $cont_app,FILE_APPEND) === FALSE) {
	    	echo "The config file hasn't been written, make the skyhog directory writable for the webserver and reload or add this content to config.inc.php:\n";
			echo $cont_app;
			exit(1);
	    } else {
	    	echo "succeded. Please reload page for further tests!\n";
	    	exit(0);
	    }		
	}
	echo "and looks fine.\n";
	
	$consts = get_defined_constants(true);
	$consts = $consts['user'];
	foreach ($consts as $key => $value) {
		$use_value = $value;
		if((substr($key, -3)=="DIR" ||  substr($key, -4)=="PATH") && substr($use_value,-1)!="/") {
			echo "WARNING: ".$key." should have a / in the end! Something could go terribly long if it has not.\n";
		}
	}	

	//create/check directories
	check_dir("./","skyhog directory","update via webinterface");
	check_dir(SCIHOG_DIR, "scihog directory");
	check_dir(LOG_DIR, "log directory");
	check_dir(BAK_DIR, "backup directory");
	check_dir(WRK_DIR, "working directory");
	check_dir(DEFAULT_LIVE_DIR, "live pages directory","creating directories for new pages automatically");
	check_dir(DEFAULT_PREVIEW_DIR, "preview pages directory","creating directories for new pages automatically");
}
